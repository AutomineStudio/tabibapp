import { IncomingForm } from "formidable";
import fs from "fs/promises";

export const config = { api: { bodyParser: false } };

export default async function handler(req, res) {
  try {
    const form = new IncomingForm({ maxFileSize: 50 * 1024 * 1024 });
    const { fields, files } = await new Promise((resolve, reject) => {
      form.parse(req, (err, flds, fls) => err ? reject(err) : resolve({ fields: flds, files: fls }));
    });

    const messages = JSON.parse(fields.messages || "[]");
    const systemPrompt = "๐ฉบ  ุฏูุฑู\nุฃูุชู ุทุจูุจ ูุบุฑุจู ุงูุชุฑุงุถู (ูุณุงุนุฏ ุชุนููููุ ูุงุดู ุจุฏูู ูุทุจูุจ ุญูููู). ูุฏูู ุชุนุทูู ูููุฑูุถ ุชูุฌูู ุฃูููู ุฏููู ูุณุฑูุนุ ูุน ุงุญุชุฑุงู ุงูุฎุตูุตูุฉ ู ุงูููุงููู ุงููุบุฑุจูุฉ.\n\n๐  ุงููุบุงุช\nโข ูุงุฏุฑ ุชููู ุฑุณุงุฆู ุจุงูุฏูุงุฑุฌุฉุ ุงูุนุฑุจูุฉ ุงููุตุญูุ ุฃู ุงููุฑูุณูุฉ.  \nโข ุงูุฌูุงุจ ูููู ุฏุงุฆูุงู ุจุงูุฏุงุฑุฌุฉ ููุชูุจุฉ ุจุงูุญุฑูู ุงูุนุฑุจูุฉ (ูุญุงูุฏุฉ ูููููุฉ)ุ ูุง ุนุฏุง ุฃุณูุงุก ุงูุฃุฏููุฉ ู ุงููููููุงุช ููู ุจุงูุญุฑูู ุงููุงุชูููุฉ.  \nโข ุฅุฐุง ุทูุจ ุงููุฑูุถ ุจูุถูุญ ุงูุฑุฏู ุจุงููุฑูุณูุฉุ ูุจูู ุงูุทูุจ.\n\n๐ผ๏ธ  ุงูุตูุฑ\nุฅุฐุง ูุตูุชู ุตูุฑุฉ ูู ุฃู ูุญุธุฉุ ูุณููุฑ ููุฑุงู ูุงุฐุง ุชุฑู ูููุงุ ููุง ุฏูุงูุชู ุงูุทุจูุฉุ ุซู ูุงุตู ุงูุญูุงุฑ ูุงููุนุชุงุฏ.\n\nโ๏ธ  ุฎุทุฉ ุงูุนูู\n\n1. **ุฌูุน ุงููุนูููุงุช ุฃูููุงู**  \n   - ุงุณุฃู ุจุงุฎุชุตุงุฑ ูุงุญุฏุงู ุชูู ุงูุขุฎุฑ (ูุง ุชูุบุฑู ุงููุฑูุถ):  \n     ุงูุนูุฑ โข ุงูุฌูุณ โข ุญูู/ุฑุถุงุนุฉ โข ุฃูุฑุงุถ ูุฒููุฉ โข ุฃุฏููุฉ ุญุงููุฉ/ุญุณุงุณูุฉ โข ูุตู ุฏููู ููุฃุนุฑุงุถ (ุงูุจุฏุงูุฉุ ุงูุดุฏูุฉุ ุงูุนูุงูู ุงูุชู ุชุฒูุฏ/ุชููุต).  \n   - ุฅุฐุง ุงูุฃุนุฑุงุถ ุฌูุฏูุฉ ุฃู ุฌุฑุญ ูุงุถุญ: ุงูุชุฑุญ ุนููู ูุฑุณู ุตูุฑุฉ.  \n\n2. **ุจุญุซ ุงููุงุนุฏุฉ ุงูุจูุงููุฉ**  \n   - ูุฏูู ููุงุนุฏ ุจูุงูุงุช ูุญูููุฉ ููุฏููุง ุงููุธุงู ุนูุฏ ุงูุทูุจ:  \n     โข `<Drug-KB>` ุงูุฃุฏููุฉ ุงููุชููุฑุฉ ูู ุงููุบุฑุจ ูุน ุงูุณููุนุฑ ุจุงูุฏุฑูู ูุงูุฅูุชูุงุก (OTC/ูุตูุฉ).  \n     โข `<Doctor-KB>` ูุงุฆุญุฉ ุงูุฃุทุจุงุก ุงูุงุฎุชุตุงุตููู ุงููุฑูุจูู ุจุงููููุน (ุฅู ุชูููุฑ).  \n     โข `<PharmacyGuard-KB>` Pharmacies de garde ููููู ุญุณุจ ุงููุฏููุฉ.  \n   - ุงุณุชุนูููุง ููุชุฃููุฏ ูู ุงูุชูููุฑ ูุงูุฃุณุนุงุฑ ูุจู ุงูุชุฑุงุญ ุฏูุงุก ุฃู ุฎุฏูุฉ.  \n\n3. **ุงูุชุดุฎูุต ู ุงูุฎุทุฉ** (ุจุนุฏ ูุง ุชุฌูุน ูุนุทูุงุช ูุงููุฉ)  \n   **โถ ุงูุชุดุฎูุต ุงูููุญุชูู:** โฆ  \n   **โถ ุงูุชุญุงููู / ุงููุญูุตุงุช ุงูููุชุฑูุญุฉ (ุนูุฏ ุงูุญุงุฌุฉ):** โฆ  \n   **โถ ุงูุนูุงุฌ ุงูููุตู ุจู:**  \n     - ุฏูุงุก 1: **Paracetamol 500 mg**, ูุฑุต ูู 6 ุณุงุนุงุช ร 3โ5 ุฃูุงู (โ 12 DH).  \n     - โฆ  \n   **โถ ูุชุงุจุนุฉ ุฃู ุฅุญุงูุฉ:**  \n     - ุฅุฐุง ุงูุญุงูุฉ ุจุณูุทุฉ: \"ููููู ุชุฑุงูุจ ุฃุนุฑุงุถู ูุงูุฏุงุฑ ูุชุณุชุนูู ุงูุฏูุงุก ุฃุนูุงู\".  \n     - ุฅุฐุง ููุฒู ุงุฎุชุตุงุตู: ุงูุชุฑุญ ูุงุฆุญุฉ ูุตูุฑุฉ ูู `<Doctor-KB>` (ุงุณูุ ุงุฎุชุตุงุตุ ุญูู).  \n\n4. **ุชูุจูู ุงูุญุงูุงุช ุงูุฎุทูุฑุฉ**  \n   - ุฅุฐุง ุฑุตุฏุช ุฃู ุนูุฑูุถ ุฃุญูุฑ (ุฃูู ุตุฏุฑ ุญุงุฏุ ุถูู ููุณุ ูุฒูู ุญุงุฏุ ููุฏุงู ูุนู โฆ)ุ ุงูุทุน ุงูุดุฑุญ ู ุงูุชุจ ุจุฎุท ูุงุถุญ:  \n     ๐ **ุณูุฑ ูููุณุชุนุฌูุงุช ุฏุงุจุง ุฃู ุนููุท 150**  \n   - ุซู ุฃุถู ุงูุณุจุจ ุจุฅูุฌุงุฒ.  \n\n5. **ุงูุฎุฏูุงุช ุงููุญููุฉ**  \n   - ุฃุฏุฑุฌ Pharmacies de garde (<ville>) ููููุฉ/ุงูููู ุงูุญุงูู ุฅู ููุฌุฏุช ุจูุงูุงุช.  \n   - ุฃุฑูุงู ุงูุทูุงุฑุฆ: 141 (ุงูุฅุณุนุงู) โข 150 (ุงูุฏุฑู) โข 19 (ุงูุดุฑุทุฉ).  \n\n6. **ุงูุชูุณูู ู ุงูุฃุณููุจ**  \n   - ูุบุฉ ูุงุถุญุฉุ ุฌูููู ูุตูุฑุฉุ ูุชูุณูู ุจุณูุท.  \n   - **ูู ูุตุทูุญ ุทุจู ุฃู ุชููู**: ุงูุชุจู ุจุงูุนุฑุจูุฉ ุซู ุถุน ุงูููุงุจู ุงููุฑูุณู ุจูู ููุณููุ ูุซูุงู: ุงูุชูุงุจ ุงูููุงุตู **(Arthrite)**ุ ุถุบุท ุงูุฏู ุงููุฑุชูุน **(Hypertension artรฉrielle)**.  \n   - ุงุณุชุนูู ููุงุฆู ููุทูุฉ ุฃู ุนูุงููู ุนูุฏ ุงูุญุงุฌุฉุ ููู ุงุญูุธ ุงูุณูุงู ูุญุงุฏุซุฉ ุทุจูุนูุฉ.  \n   - ุชุฌูุจ ุงูุญุดู ุฃู ุงูุชูุฑุงุฑุ ูุฏูู ุงูุฏูุฉ ูุงูุงุฎุชุตุงุฑ.  \n   - ูุง ุชุนุทู ุชุดุฎูุตุงู ููุงุฆูุงู ุฅุฐุง ุงููุนุทูุงุช ูุงูุตุฉ: ุงุณุชูุฑู ูู ุทุฑุญ ุณุคุงู ูุงุญุฏ ูุญุฏูุฏ.  \n\n๐  ุงูุฎุตูุตูุฉ ู ุงููุณุคูููุฉ  \n- ุฃูุชู ูุฌุฑูุฏ ูุณุงุนุฏ ุชูุฌูููุ ูุณุช ุจุฏููุงู ููุนุงููุฉ ุทุจูุจ.  \n- ูุง ุชุฎุฒูู ุฃู ูุนูููุฉ ุดุฎุตูุฉุ ุงุณุชุนูููุง ููุท ุฎูุงู ุงูุฌูุณุฉ ุงูุญุงููุฉ.  \n\n๐  ูุซุงู ูููู ุงูุฑุฏ\nโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ  \nโ โถ ุงูุชุดุฎูุต ุงูููุญุชูู        โ  \nโ โถ ุงูุชุญุงููู ุงูููุชุฑูุญุฉ       โ  \nโ โถ ุงูุนูุงุฌ ุงูููุตู ุจู        โ  \nโ โถ Pharmacies de garde     โ  \nโ โถ ูุตูุญุฉ ููุงุฆูุฉ ุฃู ุฅูุฐุงุฑ   โ  \nโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ";

    let fullMessages = [{ role: "system", content: systemPrompt }];

    // Add previous messages
    for (let i = 0; i < messages.length - 1; i++) {
      fullMessages.push({
        role: messages[i].role,
        content: messages[i].content
      });
    }

    // Handle the latest message
    const latestMessage = messages[messages.length - 1];
    if (latestMessage) {
      if (files.image) {
        try {
          const buffer = await fs.readFile(files.image.filepath);
          const base64Image = buffer.toString("base64");
          
          // Clean up the temporary file
          await fs.unlink(files.image.filepath).catch(console.error);
          
          fullMessages.push({
            role: "user",
            content: [
              {
                type: "text",
                text: latestMessage.content || ""
              },
              {
                type: "image_url",
                image_url: {
                  url: `data:image/jpeg;base64,${base64Image}`
                }
              }
            ]
          });
        } catch (error) {
          console.error("Image processing error:", error);
          // Try to clean up even if there was an error
          if (files.image?.filepath) {
            await fs.unlink(files.image.filepath).catch(console.error);
          }
          return res.status(500).json({ result: "โ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุตูุฑุฉ" });
        }
      } else {
        fullMessages.push(latestMessage);
      }
    }

    console.log("Sending to OpenAI:", JSON.stringify(fullMessages, null, 2));

    // Determine if the latest message contains an image
    const hasImage = files.image !== undefined;
    
    const openaiRes = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: hasImage ? "gpt-4.1-mini" : "gpt-4",
        messages: fullMessages,
        max_tokens: 1000,
        temperature: 0.7
      })
    });

    const data = await openaiRes.json();
    if (!openaiRes.ok) {
      console.error("OpenAI API Error:", {
        status: openaiRes.status,
        statusText: openaiRes.statusText,
        error: data.error
      });
      if (data.error?.message?.includes("does not exist or you do not have")) {
        return res.status(500).json({ 
          result: hasImage 
            ? "โ ุฎุทุฃ: ูุฑุฌู ุงูุชุฃูุฏ ูู ุชูุนูู ุฎุฏูุฉ GPT-4.1-Mini ูู ุญุณุงุจู ุนูู OpenAI ูุฅุนุฏุงุฏ ุงูููุชุฑุฉ ุจุดูู ุตุญูุญ."
            : "โ ุฎุทุฃ: ูุฑุฌู ุงูุชุฃูุฏ ูู ุชูุนูู ุฎุฏูุฉ GPT-4 ูู ุญุณุงุจู ุนูู OpenAI ูุฅุนุฏุงุฏ ุงูููุชุฑุฉ ุจุดูู ุตุญูุญ."
        });
      }
      return res.status(500).json({ result: `โ ุฎุทุฃ ูู GPT: ${data.error?.message || 'Unknown error'}` });
    }

    const reply = data.choices?.[0]?.message?.content || "โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุฑุฏ ููุงุณุจ.";
    res.status(200).json({ result: reply });
  } catch (err) {
    console.error("API error:", err);
    res.status(500).json({ result: "โ ุฎุทุฃ ูู ุงูุฎุงุฏู ุงูุฏุงุฎูู." });
  }
}